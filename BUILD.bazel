load(
    "//ign_bazel:build_defs.bzl",
    "IGNITION_FEATURES",
    "IGNITION_ROOT",
    "IGNITION_VISIBILITY",
    "generate_include_header",
    "ign_config_header",
    "ign_export_header",
)

package(
    default_visibility = IGNITION_VISIBILITY,
    features = IGNITION_FEATURES,
)

licenses(["notice"])

exports_files(["LICENSE"])

PROJECT_NAME = "ignition-common"

PROJECT_MAJOR = 3

PROJECT_MINOR = 7

PROJECT_PATCH = 0

# Generates config.hh based on the version numbers in CMake code.
ign_config_header(
    name = "config",
    src = "include/ignition/common/config.hh.in",
    cmakelists = ["CMakeLists.txt"],
    project_name = PROJECT_NAME,
    project_version = (PROJECT_MAJOR, PROJECT_MINOR, PROJECT_PATCH),
)

ign_export_header(
    name = "include/ignition/common/Export.hh",
    export_base = "IGNITION_COMMON",
    lib_name = "ignition-common",
    visibility = ["//visibility:private"],
)

public_headers_no_gen = [
    "include/ignition/common/Base64.hh",
    "include/ignition/common/Battery.hh",
    "include/ignition/common/Console.hh",
    "include/ignition/common/detail/Plugin.hh",
    "include/ignition/common/detail/PluginLoader.hh",
    "include/ignition/common/detail/PluginMacros.hh",
    "include/ignition/common/detail/PluginPtr.hh",
    "include/ignition/common/detail/SpecializedPlugin.hh",
    "include/ignition/common/detail/SuppressWarning.hh",
    "include/ignition/common/detail/TemplateHelpers.hh",
    "include/ignition/common/EnumIface.hh",
    "include/ignition/common/Filesystem.hh",
    "include/ignition/common/MaterialDensity.hh",
    "include/ignition/common/MovingWindowFilter.hh",
    "include/ignition/common/Plugin.hh",
    "include/ignition/common/PluginInfo.hh",
    "include/ignition/common/PluginLoader.hh",
    "include/ignition/common/PluginMacros.hh",
    "include/ignition/common/PluginPtr.hh",
    "include/ignition/common/SignalHandler.hh",
    "include/ignition/common/SingletonT.hh",
    "include/ignition/common/SpecializedPlugin.hh",
    "include/ignition/common/SpecializedPluginPtr.hh",
    "include/ignition/common/StringUtils.hh",
    "include/ignition/common/SuppressWarning.hh",
    "include/ignition/common/SystemPaths.hh",
    "include/ignition/common/TemplateHelpers.hh",
    "include/ignition/common/Time.hh",
    "include/ignition/common/Timer.hh",
    "include/ignition/common/URI.hh",
    "include/ignition/common/Util.hh",
    "include/ignition/common/Uuid.hh",
    "include/ignition/common/WorkerPool.hh",
]

private_headers = [
    "src/PluginUtils.hh",
    "src/PrintWindowsSystemWarning.hh",
]

generate_include_header(
    name = "commonhh_genrule",
    out = "include/ignition/common.hh",
    hdrs = public_headers_no_gen + [
        "include/ignition/common/config.hh",
        "include/ignition/common/Export.hh",
    ],
)

public_headers = public_headers_no_gen + [
    "include/ignition/common/config.hh",
    "include/ignition/common/Export.hh",
    "include/ignition/common.hh",
]

cc_library(
    name = "ign_common",
    srcs = [
        "src/Base64.cc",
        "src/Battery.cc",
        "src/Console.cc",
        "src/FilesystemBoost.cc",
        "src/Filesystem.cc",
        "src/MaterialDensity.cc",
        "src/Plugin.cc",
        "src/PluginLoader.cc",
        "src/SignalHandler.cc",
        "src/StringUtils.cc",
        "src/SystemPaths.cc",
        "src/Time.cc",
        "src/Timer.cc",
        "src/URI.cc",
        "src/Util.cc",
        "src/Uuid.cc",
        "src/WorkerPool.cc",
    ] + private_headers,
    hdrs = public_headers,
    includes = ["include"],
    linkopts = ["-dl"],
    deps = [
        "@uuid",
        IGNITION_ROOT + "ign_math",
    ],
)

cc_binary(
    name = "libignition-common3.so",
    includes = ["include"],
    linkopts = ["-Wl,-soname,libignition-common4.so"],
    linkshared = True,
    deps = [":ign_common"],
)

test_srcs = [
    "src/Base64_TEST.cc",
    "src/Console_TEST.cc",
    "src/Filesystem_TEST.cc",
    "src/MaterialDensity_TEST.cc",
    "src/PluginLoader_TEST.cc",
    "src/SignalHandler_TEST.cc",
    "src/StringUtils_TEST.cc",
    "src/SystemPaths_TEST.cc",
    "src/TemplateHelpers_TEST.cc",
    "src/Time_TEST.cc",
    "src/URI_TEST.cc",
    "src/Util_TEST.cc",
    "src/Uuid_TEST.cc",
    "src/WorkerPool_TEST.cc",
]

[cc_test(
    name = src.replace("/", "_").replace(".cc", "").replace("src_", ""),
    srcs = [src],
    deps = [
        ":ign_common",
        IGNITION_ROOT + "ign_common/test:test_utils",
        "@gtest",
        "@gtest//:gtest_main",
    ],
) for src in test_srcs]
